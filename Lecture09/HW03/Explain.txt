HW03-LogAnalyzer: วิเคราะห์ไฟล์ Logวัตถุประสงค์:
ให้สร้างฟังก์ชันที่ใช้ในการวิเคราะห์ไฟล์ log ของเซิร์ฟเวอร์เพื่อสรุปข้อมูลต่าง ๆ ที่ต้องการ โดยไฟล์ log นี้จะมีข้อมูลการร้องขอ HTTP แต่ละรายการในบรรทัดประกอบด้วยข้อมูลดังต่อไปนี้:
IP Address ของไคลเอนต์ที่ทำการร้องขอ
วิธีการร้องขอ (เช่น GET, POST)
ทรัพยากรที่ร้องขอ (เช่น /index.html)
สถานะของการร้องขอ (เช่น 200, 404)
ขนาดของการร้องขอในหน่วยไบต์
ข้อกำหนดชื่อฟังก์ชัน:

def analyze_log_file(log_file_path: str) -> dict: 
      pass

คำแนะนำ:


ฟังก์ชันจะได้รับพาธของไฟล์ log log_file_path ที่บรรจุหลายบรรทัด โดยแต่ละบรรทัดมีรูปแบบดังนี้:

192.168.1.1 GET /index.html 200 512 192.168.1.2 POST /api/data 404 1024 
192.168.1.1 GET /about.html 200 256



นับจำนวนการร้องขอจากแต่ละ IP Addressหาทรัพยากรที่ถูกเรียกร้องมากที่สุดนับจำนวนการร้องขอที่ส่งผลให้เกิดข้อผิดพลาด 404คำนวณขนาดรวมของการร้องขอทั้งหมดในหน่วยไบต์

ฟังก์ชันควรส่งคืนผลลัพธ์เป็นพจนานุกรมที่ประกอบด้วย:
"requests_by_ip": พจนานุกรมที่คีย์เป็น IP Address และค่าเป็นจำนวนครั้งที่ร้องขอจาก IP นั้น ๆ
"most_requested_resource": ทรัพยากรที่ถูกเรียกร้องมากที่สุด
"total_404_errors": จำนวนการร้องขอทั้งหมดที่ส่งผลให้เกิดข้อผิดพลาด 404
"total_bytes": ขนาดรวมของการร้องขอทั้งหมดในหน่วยไบต์
ข้อจำกัด:
ไฟล์ log มีการจัดรูปแบบอย่างถูกต้องและประกอบด้วยข้อมูลที่ถูกต้อง
ไฟล์ log อาจมีขนาดใหญ่ ดังนั้นโค้ดควรทำงานอย่างมีประสิทธิภาพในเรื่องของการใช้หน่วยความจำและเวลาในการประมวลผล
ตัวอย่างไฟล์ log 

192.168.1.1 GET /index.html 200 512 
192.168.1.2 POST /api/data 404 1024 
192.168.1.1 GET /about.html 200 256 
192.168.1.1 GET /index.html 404 128 
192.168.1.2 GET /index.html 200 512



{ 
  "requests_by_ip": {"192.168.1.1": 3, "192.168.1.2": 2}, 
  "most_requested_resource": "/index.html", 
  "total_404_errors": 2,
"total_bytes": 2432 
}

อธิบาย:
ไฟล์ log ตัวอย่างนี้แสดงให้เห็นว่า IP 192.168.1.1 ทำการร้องขอ 3 ครั้ง และ IP 192.168.1.2 ทำการร้องขอ 2 ครั้ง
ทรัพยากรที่ถูกเรียกร้องมากที่สุดคือ /index.html
มีการร้องขอที่ส่งผลให้เกิดข้อผิดพลาด 404 ทั้งหมด 2 ครั้ง
ขนาดของการร้องขอทั้งหมดรวมกันเท่ากับ 2432 ไบต์
แนวทาง:ใช้การอ่านไฟล์แบบทีละบรรทัดเพื่อประมวลผลข้อมูลใช้พจนานุกรมเพื่อเก็บข้อมูล IP Address และจำนวนครั้งที่ทำการร้องขอนับจำนวนครั้งของแต่ละทรัพยากรและหาทรัพยากรที่ถูกเรียกร้องมากที่สุดนับจำนวนข้อผิดพลาด 404 และคำนวณขนาดรวมของการร้องขอทั้งหมดมีการทดสอบไฟล์ที่เป็นไฟล์ที่ไม่มีข้อมูลมีการทดสอบไฟล์ที่มี ข้อมูลไม่ตรงกับรูปแบบ (บรรทัดที่ข้อมูลไม่ตรงตามรูปแบบให้ข้ามไป)

คำสั่ง run-test โปรแกรม

python -m unittest test_logAnalyzer.py
